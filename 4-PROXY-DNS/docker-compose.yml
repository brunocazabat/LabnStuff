##### GENERATED START #####
# Define the custom bridge network for communication between services.
networks:
    bridge_network:
        name: bridge_network
        driver: bridge # Use the bridge network driver for service communication.

# Order: defaults_values, image, container_name, depends_on, environment, ports, volumes, healthcheck
x-defaults: &defaults_values
    restart: unless-stopped # Automatically restart the container unless manually stopped.
    env_file: .env # Load additional environment variables from a .env file.
    privileged: false # Do not run the container in privileged mode.
    security_opt:
        - no-new-privileges:true
    environment:
        TZ: Europe/Berlin # Set the application timezone.
        DISABLE_IPV6: ${DISABLE_IPV6} # Optionally disable IPv6 support using an environment variable.
    logging: # Configure log rotation to prevent excessive disk usage.
        driver: local # Use the default local logging driver.
        options:
            max-size: "20m" # Limit individual log file size to 20MB.
            max-file: "5" # Keep a maximum of 5 log files.
            compress: "true" # Compress log files to save disk space.
    networks: [bridge_network] # Attach the container to the custom network.

services:
    # Watchtower service to automatically update containers when new versions of their images are available.
    watchtower:
        <<: *defaults_values
        image: containrrr/watchtower # The official Watchtower image.
        container_name: watchtower # Name the container "watchtower" for easier identification.
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:rw # Mount the Docker socket to allow Watchtower to interact with the Docker daemon.
        command:
            --cleanup --interval 86400 # Configure Watchtower:
            # --cleanup: Remove old images after updates.
            # --interval 86400: Check for updates every 24 hours (86400 seconds).
    ##### GENERATED END #####

    ##### SERVICES START ##### ADD YOUR SERVICES BELOW #####
    nginx-proxy-manager:
        <<: *defaults_values
        image: jc21/nginx-proxy-manager:latest
        container_name: nginx
        depends_on:
            - db
        environment:
            DB_MYSQL_HOST: "db"
            DB_MYSQL_PORT: "3306"
            DB_MYSQL_USER: ${MYSQL_USER}
            DB_MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            DB_MYSQL_NAME: ${MYSQL_DATABASE}
        ports:
            - "80:80"
            - "81:81"
            - "443:443"
        volumes:
            - ./data:/data:rw
            - ./letsencrypt:/etc/letsencrypt:rw
        healthcheck:
            test: ["CMD", "/usr/bin/check-health"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 10s

    db:
        <<: *defaults_values
        image: mariadb:latest
        container_name: db
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        volumes:
            - ./mariadb:/var/lib/mysql:rw
